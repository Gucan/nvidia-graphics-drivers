#! /bin/sh
# postrm script for #DRIVERNAME#
#
# see: dh_installdeb(1)
#
# Copyright (C) 2009-2010 Canonical Ltd
# Authors: Alberto Milone

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see /usr/share/doc/packaging-manual/

NVPD_USER="nvidia-persistenced"
arch=`dpkg --print-architecture`

_remove_diversions() {
    set -a "libGL.so.1" "libGL.so" "libEGL.so.1" "libEGL.so" "libGLESv2.so" "libGLESv2.so.2"
    while [ $# -ge 1 ]; do
        libname=$1
        if dpkg-divert --list | grep -F "#PKGLIBDIR#/$libname.distrib"
        then
            rm -f #PKGLIBDIR#/$libname
            dpkg-divert --remove --rename #PKGLIBDIR#/$libname
        fi
        if [ "$arch" = "amd64" ]; then
            if dpkg-divert --list | grep -F "#PKGLIBDIR32#/$libname.distrib"
            then
                rm -f #PKGLIBDIR32#/$libname
                dpkg-divert --remove --rename #PKGLIBDIR32#/$libname
            fi
        fi
        shift
    done
}


case "$1" in
    remove|purge)
		# Make sure that no diversion is still there
		_remove_diversions

        # Remove the nvidia-persistenced user
        if id "$NVPD_USER" > /dev/null 2>&1; then
            userdel "$NVPD_USER" || true
        fi

        # Update initramfs, in case we were loaded into it
        /usr/sbin/update-initramfs -u
    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)


    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 0
    ;;

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#
